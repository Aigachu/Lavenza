# Reader-Friendly name of the command.
name: 'Pong Command'

# Set whether or not the command is active.
# Commands are active by default. If you absolutely want to disable a command, set this to false.
# If you omit this, the command will be active.
# active: true

# Command description. This may be used in the bot and seen by users. Make it good!
description: 'Command that simply orders the bot to say "Ping!"'

# Path to the main class containing the logic of the command, relative to this directory.
class: 'Pong'

# Command key. This is what users will use to invoke the command.
key: 'pong'

# Additional "keys" that can be used to invoke the command.
aliases:
  - 'pongu'
  - 'pongo'

# Configure the global cooldown of the command.
# By default, commands will have a cooldown of 5 seconds for users, and no global cooldown.
cooldown:
  global: 0
  user: 0

# Authorization configuration.
authorization:
  # Determines whether or not this command can work in direct messages with the bot.
  enabledInDirectMessages: true

  # Determines the Eminence needed to operate this command.
  accessEminence: None

# Clients where this command will function.
# If unset or set to '*', this command will work on ALL CLIENTS. Be advised and plan your code accordingly.
# For each enabled client, you should create a 'COMMANDNAME.CLIENTNAME.yml' file in this same directory.
# Examples of these files can be taken straight from the 'examples' talent, in the Ping command.
clients: '*'